basePath: /api/v1
definitions:
  models.AuthCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  models.Word:
    properties:
      created_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
      word:
        type: string
    type: object
host: 0.0.0.0:3000
info:
  contact:
    email: sonalpha023@gmail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Kighala API
  version: "1.0"
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      description: User signin.
      parameters:
      - description: Username and Password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AuthCredentials'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: user signin
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: User signup.
      parameters:
      - description: Username and Password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AuthCredentials'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: user signup
      tags:
      - Auth
  /kamusi/words:
    get:
      consumes:
      - application/json
      description: Get all words.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Word'
            type: array
      summary: get all words
      tags:
      - Words
    post:
      consumes:
      - application/json
      description: Create a new word.
      parameters:
      - description: Word
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/models.Word'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Word'
      security:
      - ApiKeyAuth: []
      summary: create a new word
      tags:
      - Words
  /kamusi/words/{id}:
    delete:
      consumes:
      - application/json
      description: Delete word by given ID.
      parameters:
      - description: Word ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete word by given ID
      tags:
      - Words
    get:
      consumes:
      - application/json
      description: Get word by ID.
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Word'
      security:
      - ApiKeyAuth: []
      summary: get word by ID
      tags:
      - Words
    put:
      consumes:
      - application/json
      description: Update word.
      parameters:
      - description: Word ID
        in: body
        name: id
        required: true
        schema:
          type: string
      - description: Word
        in: body
        name: word
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update word
      tags:
      - Words
  /kamusi/words/{id}/definitions:
    get:
      consumes:
      - application/json
      description: Get definitions by word ID.
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Word'
      summary: get definitions by word ID
      tags:
      - Words
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Auth-Token
    type: apiKey
swagger: "2.0"
